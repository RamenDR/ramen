---
# yamllint disable rule:line-length
# Ref template: https://github.com/golangci/golangci-lint/blob/v1.37.1/.golangci.example.yml

# options for analysis running
run:
  timeout: 5m

version: "2"
# all available settings of specific linters
linters:
  settings:
    errcheck:
      # report about not checking of errors in type assertions:
      # `a := b.(MyStruct)`;
      # default is false: such cases aren't reported by default.
      check-type-assertions: true
      check-blank: true
    gocognit:
      # minimal code complexity to report, 30 by default
      # (but we recommend 10-20)
      min-complexity: 15
    gocyclo:
      # minimal code complexity to report, 30 by default
      # (but we recommend 10-20)
      min-complexity: 15
    goheader:
      template: |
        SPDX-FileCopyrightText: The RamenDR authors
        SPDX-License-Identifier: Apache-2.0
    misspell:
      locale: US
    promlinter:
      strict: true
    wsl_v5:
      allow-first-in-block: true
      allow-whole-block: false
      branch-max-lines: 2
      enable:
        - err
    revive:
      severity: error
      rules:
        - name: blank-imports
        - name: context-as-argument
        - name: context-keys-type
        - name: dot-imports
        - name: error-return
        - name: error-strings
        - name: error-naming
        - name: exported
        - name: increment-decrement
        # This rule warns when initialism, variable or package naming conventions are not followed
        # Refer: https://github.com/mgechev/revive/blob/HEAD/RULES_DESCRIPTIONS.md#var-naming
        - name: var-naming
          arguments:
            - []    # allowlist of initialisms
            - []    # blocklist of initialisms
            -
              - upper-case-const: true      # allow UPPER_CASE for const
                skip-package-name-checks: true      # skip package name checks
        - name: var-declaration
        - name: package-comments
        - name: range
        - name: receiver-naming
        - name: time-naming
        - name: unexported-return
        - name: indent-error-flow
        - name: errorf
        - name: empty-block
        - name: superfluous-else
        - name: unreachable-code
        - name: redefines-builtin-id
        - name: atomic
        - name: constant-logical-expr
        - name: unnecessary-stmt
        - name: get-return
        - name: modifies-parameter
        - name: modifies-value-receiver
        - name: range-val-in-closure
        - name: waitgroup-by-value
        - name: call-to-gc
        - name: duplicated-imports
        - name: unhandled-error
        # - name: flag-parameter
        # - name: unused-receiver
        # - name: unused-parameter
        # - name: confusing-naming
        # - name: import-shadowing
        # - name: confusing-results
        # - name: bool-literal-in-expr
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      # Allow dot imports for ginkgo and gomega
      - linters:
          - revive
        text: should not use dot imports
        source: ginkgo|gomega
      - linters:
          - funlen
        source: ^func Test
      - linters:
          - lll
        source: ^//
    paths:
      - third_party$
      - builtin$
      - examples$
  default: none
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    #  - copyloopvar // Additional new replacement for go 1.22 (https://go.dev/blog/loopvar-preview) (deprecating exportloopref)
    - cyclop
    #  - deadcode // Fully deprecated, remove this line once an alternative is enabled for the same
    - decorder
    #  - depguard
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errchkjson
    #  - errorlint
    #  - execinquery // Fully deprecated, remove this line once an alternative is enabled for the same
    - exhaustive
    - forbidigo
    - funlen
    - gocognit
    #  - goconst
    - gocritic
    - gocyclo
    #  - golint // Fully deprecated, remove this line once an alternative is enabled for the same
    - gomodguard
    - goprintffuncname
    - gosec
    - govet
    - grouper
    #  - ifshort // Fully deprecated, remove this line once an alternative is enabled for the same
    - importas
    - ineffassign
    - interfacebloat
    - lll
    - loggercheck
    - maintidx
    - makezero
    #  - maligned // Fully deprecated, remove this line once an alternative is enabled for the same
    - misspell
    - mnd
    #  - nakedret
    - nestif
    - nilerr
    - nlreturn
    - noctx
    #  - nolintlint
    - nosprintfhostport
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    #  - scopelint // Fully deprecated, remove this line once an alternative is enabled for the same
    - sqlclosecheck
    # - structcheck // Fully deprecated, remove this line once an alternative is enabled for the same
    - testpackage
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - usetesting
    #  - varcheck // Fully deprecated, remove this line once an alternative is enabled for the same
    - wastedassign
    - whitespace
    - wsl_v5
    #  - gochecknoglobals
    #  - gochecknoinits
    #  - godot
    #  - godox
    #  - paralleltest
    #  - goerr113  # TODO: Need to introduce error definition and bring this back
    #  - goheader  # TODO: Introduce back post fixing linter errors
    #  - gci
    #  - interfacer  # interfacer linter is archived and deprecated (https://github.com/mvdan/interfacer)
    #  - exhaustruct
    #  - tagliatelle
    #  - gomoddirectives
    #  - goimports
    #  - wrapcheck
    #  - varnamelen
    #  - staticcheck
    #  - nosnakecase
    #  - ireturn
    #  - nilnil
    #  - containedctx
    #  - nonamedreturns
    #  - forcetypeassert
    #  - contextcheck
    #  - errname
formatters:
  enable:
    - gofmt
    - gofumpt
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
