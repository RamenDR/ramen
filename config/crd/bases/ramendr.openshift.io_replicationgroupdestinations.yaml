---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: replicationgroupdestinations.ramendr.openshift.io
spec:
  group: ramendr.openshift.io
  names:
    kind: ReplicationGroupDestination
    listKind: ReplicationGroupDestinationList
    plural: replicationgroupdestinations
    singular: replicationgroupdestination
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReplicationGroupDestination is the Schema for the replicationgroupdestinations
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ReplicationGroupDestinationSpec defines the desired state
              of ReplicationGroupDestination
            properties:
              rdSpecs:
                items:
                  description: |-
                    VolSyncReplicationDestinationSpec defines the configuration for the VolSync
                    protected PVC to be used by the destination cluster (Secondary)
                  properties:
                    protectedPVC:
                      description: protectedPVC contains the information about the
                        PVC to be protected by VolSync
                      properties:
                        accessModes:
                          description: AccessModes set in the claim to be replicated
                          items:
                            type: string
                          type: array
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations for the PVC
                          type: object
                        conditions:
                          description: Conditions for this protected pvc
                          items:
                            description: "Condition contains details for one aspect
                              of the current state of this API Resource.\n---\nThis
                              struct is intended for direct use as an array at the
                              field path .status.conditions.  For example,\n\n\n\ttype
                              FooStatus struct{\n\t    // Represents the observations
                              of a foo's current state.\n\t    // Known .status.conditions.type
                              are: \"Available\", \"Progressing\", and \"Degraded\"\n\t
                              \   // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t
                              \   // +listType=map\n\t    // +listMapKey=type\n\t
                              \   Conditions []metav1.Condition `json:\"conditions,omitempty\"
                              patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                              \   // other fields\n\t}"
                            properties:
                              lastTransitionTime:
                                description: |-
                                  lastTransitionTime is the last time the condition transitioned from one status to another.
                                  This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                format: date-time
                                type: string
                              message:
                                description: |-
                                  message is a human readable message indicating details about the transition.
                                  This may be an empty string.
                                maxLength: 32768
                                type: string
                              observedGeneration:
                                description: |-
                                  observedGeneration represents the .metadata.generation that the condition was set based upon.
                                  For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                  with respect to the current state of the instance.
                                format: int64
                                minimum: 0
                                type: integer
                              reason:
                                description: |-
                                  reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                  Producers of specific condition types may define expected values and meanings for this field,
                                  and whether the values are considered a guaranteed API.
                                  The value should be a CamelCase string.
                                  This field may not be empty.
                                maxLength: 1024
                                minLength: 1
                                pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                type: string
                              status:
                                description: status of the condition, one of True,
                                  False, Unknown.
                                enum:
                                - "True"
                                - "False"
                                - Unknown
                                type: string
                              type:
                                description: |-
                                  type of condition in CamelCase or in foo.example.com/CamelCase.
                                  ---
                                  Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                                  useful (see .node.status.conditions), the ability to deconflict is important.
                                  The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                            required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                            type: object
                          type: array
                        csiProvisioner:
                          description: |-
                            StorageProvisioners contains the provisioner name of the CSI driver used to provision this
                            PVC (extracted from the storageClass that was used for provisioning)
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels for the PVC
                          type: object
                        lastSyncBytes:
                          description: Bytes transferred per sync, if protected in
                            async mode only
                          format: int64
                          type: integer
                        lastSyncDuration:
                          description: |-
                            Duration of recent synchronization for PVC, if
                            protected in the async or volsync mode
                          type: string
                        lastSyncTime:
                          description: |-
                            Time of the most recent successful synchronization for the PVC, if
                            protected in the async or volsync mode
                          format: date-time
                          type: string
                        name:
                          description: Name of the VolRep/PVC resource
                          type: string
                        namespace:
                          description: Name of the namespace the PVC is in
                          type: string
                        protectedByVolSync:
                          description: VolSyncPVC can be used to denote whether this
                            PVC is protected by VolSync. Defaults to "false".
                          type: boolean
                        replicationID:
                          description: |-
                            ReplicationID contains the globally unique replication identifier, as reported by the storage backend
                            on the VolumeReplicationClass as the value for the label "ramendr.openshift.io/replicationid", that
                            identifies the storage backends across 2 (or more) storage instances where the volume is replicated
                            It also contains any maintenance modes that the replication backend requires during vaious Ramen actions
                          properties:
                            id:
                              description: |-
                                ID contains the globally unique storage identifier that identifies
                                the storage or replication backend
                              type: string
                            modes:
                              description: |-
                                Modes is a list of maintenance modes that need to be activated on the storage
                                backend, prior to various Ramen related orchestration. This is read from the label
                                "ramendr.openshift.io/maintenancemodes" on the StorageClass or VolumeReplicationClass,
                                the value for which is a comma separated list of maintenance modes.
                              items:
                                description: |-
                                  MMode defines a maintenance mode, that a storage backend may be requested to act on, based on the DR orchestration
                                  in progress for one or more workloads whose PVCs use the specific storage provisioner
                                enum:
                                - Failover
                                type: string
                              type: array
                          required:
                          - id
                          type: object
                        resources:
                          description: Resources set in the claim to be replicated
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                        storageClassName:
                          description: Name of the StorageClass required by the claim.
                          type: string
                        storageID:
                          description: |-
                            StorageID contains the globally unique storage identifier, as reported by the storage backend
                            on the StorageClass as the value for the label "ramendr.openshift.io/storageid", that identifies
                            the storage backend that was used to provision the volume. It is used to label different StorageClasses
                            across different kubernetes clusters, that potentially share the same storage backend.
                            It also contains any maintenance modes that the storage backend requires during vaious Ramen actions
                          properties:
                            id:
                              description: |-
                                ID contains the globally unique storage identifier that identifies
                                the storage or replication backend
                              type: string
                            modes:
                              description: |-
                                Modes is a list of maintenance modes that need to be activated on the storage
                                backend, prior to various Ramen related orchestration. This is read from the label
                                "ramendr.openshift.io/maintenancemodes" on the StorageClass or VolumeReplicationClass,
                                the value for which is a comma separated list of maintenance modes.
                              items:
                                description: |-
                                  MMode defines a maintenance mode, that a storage backend may be requested to act on, based on the DR orchestration
                                  in progress for one or more workloads whose PVCs use the specific storage provisioner
                                enum:
                                - Failover
                                type: string
                              type: array
                          required:
                          - id
                          type: object
                      type: object
                  type: object
                type: array
              volumeSnapshotClassSelector:
                description: |-
                  Label selector to identify the VolumeSnapshotClass resources
                  that are scanned to select an appropriate VolumeSnapshotClass
                  for the VolumeReplication resource when using VolSync.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            type: object
          status:
            description: ReplicationGroupDestinationStatus defines the observed state
              of ReplicationGroupDestination
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastSyncDuration:
                description: |-
                  lastSyncDuration is the amount of time required to send the most recent
                  update.
                type: string
              lastSyncStartTime:
                description: lastSyncStartTime is the time the most recent synchronization
                  started.
                format: date-time
                type: string
              lastSyncTime:
                description: lastSyncTime is the time of the most recent successful
                  synchronization.
                format: date-time
                type: string
              latestImage:
                additionalProperties:
                  description: |-
                    TypedLocalObjectReference contains enough information to let you locate the
                    typed referenced object inside the same namespace.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup is the group for the resource being referenced.
                        If APIGroup is not specified, the specified Kind must be in the core API group.
                        For any other third-party types, APIGroup is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                description: |-
                  latestImage in the object holding the most recent consistent replicated
                  image.
                type: object
              nextSyncTime:
                description: |-
                  nextSyncTime is the time when the next volume synchronization is
                  scheduled to start (for schedule-based synchronization).
                format: date-time
                type: string
              replicationDestinations:
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
