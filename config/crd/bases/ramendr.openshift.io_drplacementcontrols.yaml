---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: drplacementcontrols.ramendr.openshift.io
spec:
  group: ramendr.openshift.io
  names:
    kind: DRPlacementControl
    listKind: DRPlacementControlList
    plural: drplacementcontrols
    shortNames:
    - drpc
    singular: drplacementcontrol
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.preferredCluster
      name: preferredCluster
      type: string
    - jsonPath: .spec.failoverCluster
      name: failoverCluster
      type: string
    - jsonPath: .spec.action
      name: desiredState
      type: string
    - jsonPath: .status.phase
      name: currentState
      type: string
    - jsonPath: .status.progression
      name: progression
      priority: 2
      type: string
    - jsonPath: .status.actionStartTime
      name: start time
      priority: 2
      type: string
    - jsonPath: .status.actionDuration
      name: duration
      priority: 2
      type: string
    - jsonPath: .status.conditions[1].status
      name: peer ready
      priority: 2
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DRPlacementControl is the Schema for the drplacementcontrols
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DRPlacementControlSpec defines the desired state of DRPlacementControl
            properties:
              action:
                description: Action is either Failover or Relocate operation
                enum:
                - Failover
                - Relocate
                type: string
              drPolicyRef:
                description: DRPolicyRef is the reference to the DRPolicy participating
                  in the DR replication for this DRPC
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: drPolicyRef is immutable
                  rule: self == oldSelf
              failoverCluster:
                description: |-
                  FailoverCluster is the cluster name that the user wants to failover the application to.
                  If not specified, then the DRPC will select the surviving cluster from the DRPolicy
                type: string
              kubeObjectProtection:
                properties:
                  captureInterval:
                    description: Preferred time between captures
                    format: duration
                    type: string
                  kubeObjectSelector:
                    description: Label selector to identify all the kube objects that
                      need DR protection.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  recipeParameters:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Recipe parameter definitions
                    type: object
                  recipeRef:
                    description: Name of the Recipe to reference for capture and recovery
                      workflows and volume selection.
                    properties:
                      name:
                        description: Name of recipe
                        type: string
                      namespace:
                        description: Name of namespace recipe is in
                        type: string
                    type: object
                type: object
              placementRef:
                description: PlacementRef is the reference to the PlacementRule used
                  by DRPC
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: placementRef is immutable
                  rule: self == oldSelf
              preferredCluster:
                description: PreferredCluster is the cluster name that the user preferred
                  to run the application on
                type: string
              protectedNamespaces:
                description: |-
                  ProtectedNamespaces is a list of namespaces that are protected by the DRPC.
                  Omitting this field means resources are only protected in the namespace controlled by the PlacementRef.
                  If this field is set, the PlacementRef and the DRPC must be in the RamenOpsNamespace as set in the Ramen Config.
                  If this field is set, the protected namespace resources are treated as unmanaged.
                  You can use a recipe to filter and coordinate the order of the resources that are protected.
                items:
                  type: string
                type: array
              pvcSelector:
                description: |-
                  Label selector to identify all the PVCs that need DR protection.
                  This selector is assumed to be the same for all subscriptions that
                  need DR protection. It will be passed in to the VRG when it is created
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: pvcSelector is immutable
                  rule: self == oldSelf
              volSyncSpec:
                description: |-
                  VolSynccSpec defines the ReplicationDestination specs for the Secondary VRG, or
                  the ReplicationSource specs for the Primary VRG
                properties:
                  disabled:
                    description: disabled when set, all the VolSync code is bypassed.
                      Default is 'false'
                    type: boolean
                  moverConfig:
                    items:
                      properties:
                        moverSecurityContext:
                          description: |-
                            MoverSecurityContext allows specifying the PodSecurityContext that will
                            be used by the data mover
                          properties:
                            appArmorProfile:
                              description: |-
                                appArmorProfile is the AppArmor options to use by the containers in this pod.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile loaded on the node that should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must match the loaded name of the profile.
                                    Must be set if and only if type is "Localhost".
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of AppArmor profile will be applied.
                                    Valid options are:
                                      Localhost - a profile pre-loaded on the node.
                                      RuntimeDefault - the container runtime's default profile.
                                      Unconfined - no AppArmor enforcement.
                                  type: string
                              required:
                              - type
                              type: object
                            fsGroup:
                              description: |-
                                A special supplemental group that applies to all containers in a pod.
                                Some volume types allow the Kubelet to change the ownership of that volume
                                to be owned by the pod:

                                1. The owning GID will be the FSGroup
                                2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                3. The permission bits are OR'd with rw-rw----

                                If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                Note that this field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            fsGroupChangePolicy:
                              description: |-
                                fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                before being exposed inside Pod. This field will only apply to
                                volume types which support fsGroup based ownership(and permissions).
                                It will have no effect on ephemeral volume types such as: secret, configmaps
                                and emptydir.
                                Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            runAsGroup:
                              description: |-
                                The GID to run the entrypoint of the container process.
                                Uses runtime default if unset.
                                May also be set in SecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence
                                for that container.
                                Note that this field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: |-
                                Indicates that the container must run as a non-root user.
                                If true, the Kubelet will validate the image at runtime to ensure that it
                                does not run as UID 0 (root) and fail to start the container if it does.
                                If unset or false, no such validation will be performed.
                                May also be set in SecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: |-
                                The UID to run the entrypoint of the container process.
                                Defaults to user specified in image metadata if unspecified.
                                May also be set in SecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence
                                for that container.
                                Note that this field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            seLinuxChangePolicy:
                              description: |-
                                seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                Valid values are "MountOption" and "Recursive".

                                "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.

                                "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                This requires all Pods that share the same volume to use the same SELinux label.
                                It is not possible to share the same volume among privileged and unprivileged Pods.
                                Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                CSIDriver instance. Other volumes are always re-labelled recursively.
                                "MountOption" value is allowed only when SELinuxMount feature gate is enabled.

                                If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                and "Recursive" for all other volumes.

                                This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.

                                All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            seLinuxOptions:
                              description: |-
                                The SELinux context to be applied to all containers.
                                If unspecified, the container runtime will allocate a random SELinux context for each
                                container.  May also be set in SecurityContext.  If set in
                                both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                takes precedence for that container.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: |-
                                The seccomp options to use by the containers in this pod.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile defined in a file on the node should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be set for any other type.
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of seccomp profile will be applied.
                                    Valid options are:

                                    Localhost - a profile defined in a file on the node should be used.
                                    RuntimeDefault - the container runtime default profile should be used.
                                    Unconfined - no profile should be applied.
                                  type: string
                              required:
                              - type
                              type: object
                            supplementalGroups:
                              description: |-
                                A list of groups applied to the first process run in each container, in
                                addition to the container's primary GID and fsGroup (if specified).  If
                                the SupplementalGroupsPolicy feature is enabled, the
                                supplementalGroupsPolicy field determines whether these are in addition
                                to or instead of any group memberships defined in the container image.
                                If unspecified, no additional groups are added, though group memberships
                                defined in the container image may still be used, depending on the
                                supplementalGroupsPolicy field.
                                Note that this field cannot be set when spec.os.name is windows.
                              items:
                                format: int64
                                type: integer
                              type: array
                              x-kubernetes-list-type: atomic
                            supplementalGroupsPolicy:
                              description: |-
                                Defines how supplemental groups of the first container processes are calculated.
                                Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                and the container runtime must implement support for this feature.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            sysctls:
                              description: |-
                                Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                sysctls (by the container runtime) might fail to launch.
                                Note that this field cannot be set when spec.os.name is windows.
                              items:
                                description: Sysctl defines a kernel parameter to
                                  be set
                                properties:
                                  name:
                                    description: Name of a property to set
                                    type: string
                                  value:
                                    description: Value of a property to set
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            windowsOptions:
                              description: |-
                                The Windows specific settings applied to all containers.
                                If unspecified, the options within a container's SecurityContext will be used.
                                If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: |-
                                    GMSACredentialSpec is where the GMSA admission webhook
                                    (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                    GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: |-
                                    HostProcess determines if a container should be run as a 'Host Process' container.
                                    All of a Pod's containers must have the same effective HostProcess value
                                    (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                    In addition, if HostProcess is true then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: |-
                                    The UserName in Windows to run the entrypoint of the container process.
                                    Defaults to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        moverServiceAccount:
                          description: |-
                            MoverServiceAccount allows specifying the name of the service account
                            that will be used by the data mover. This should only be used by advanced
                            users who want to override the service account normally used by the mover.
                            The service account needs to exist in the same namespace as this CR.
                          type: string
                        pvcName:
                          description: PVCName is a required field and must not be
                            empty
                          minLength: 1
                          type: string
                        pvcNamespace:
                          description: PVCNameSpace is a required field and must not
                            be empty
                          minLength: 1
                          type: string
                      required:
                      - pvcName
                      - pvcNamespace
                      type: object
                    type: array
                  rdSpec:
                    description: rdSpec array contains the PVCs information that will/are
                      be/being protected by VolSync
                    items:
                      description: |-
                        VolSyncReplicationDestinationSpec defines the configuration for the VolSync
                        protected PVC to be used by the destination cluster (Secondary)
                      properties:
                        protectedPVC:
                          description: protectedPVC contains the information about
                            the PVC to be protected by VolSync
                          properties:
                            accessModes:
                              description: AccessModes set in the claim to be replicated
                              items:
                                type: string
                              type: array
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations for the PVC
                              type: object
                            conditions:
                              description: Conditions for this protected pvc
                              items:
                                description: Condition contains details for one aspect
                                  of the current state of this API Resource.
                                properties:
                                  lastTransitionTime:
                                    description: |-
                                      lastTransitionTime is the last time the condition transitioned from one status to another.
                                      This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                    format: date-time
                                    type: string
                                  message:
                                    description: |-
                                      message is a human readable message indicating details about the transition.
                                      This may be an empty string.
                                    maxLength: 32768
                                    type: string
                                  observedGeneration:
                                    description: |-
                                      observedGeneration represents the .metadata.generation that the condition was set based upon.
                                      For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                      with respect to the current state of the instance.
                                    format: int64
                                    minimum: 0
                                    type: integer
                                  reason:
                                    description: |-
                                      reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                      Producers of specific condition types may define expected values and meanings for this field,
                                      and whether the values are considered a guaranteed API.
                                      The value should be a CamelCase string.
                                      This field may not be empty.
                                    maxLength: 1024
                                    minLength: 1
                                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                    type: string
                                  status:
                                    description: status of the condition, one of True,
                                      False, Unknown.
                                    enum:
                                    - "True"
                                    - "False"
                                    - Unknown
                                    type: string
                                  type:
                                    description: type of condition in CamelCase or
                                      in foo.example.com/CamelCase.
                                    maxLength: 316
                                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                    type: string
                                required:
                                - lastTransitionTime
                                - message
                                - reason
                                - status
                                - type
                                type: object
                              type: array
                            csiProvisioner:
                              description: |-
                                StorageProvisioners contains the provisioner name of the CSI driver used to provision this
                                PVC (extracted from the storageClass that was used for provisioning)
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels for the PVC
                              type: object
                            lastSyncBytes:
                              description: Bytes transferred per sync, if protected
                                in async mode only
                              format: int64
                              type: integer
                            lastSyncDuration:
                              description: |-
                                Duration of recent synchronization for PVC, if
                                protected in the async or volsync mode
                              type: string
                            lastSyncTime:
                              description: |-
                                Time of the most recent successful synchronization for the PVC, if
                                protected in the async or volsync mode
                              format: date-time
                              type: string
                            name:
                              description: Name of the VolRep/PVC resource
                              type: string
                            namespace:
                              description: Name of the namespace the PVC is in
                              type: string
                            protectedByVolSync:
                              description: VolSyncPVC can be used to denote whether
                                this PVC is protected by VolSync. Defaults to "false".
                              type: boolean
                            replicationID:
                              description: |-
                                ReplicationID contains the globally unique replication identifier, as reported by the storage backend
                                on the VolumeReplicationClass as the value for the label "ramendr.openshift.io/replicationid", that
                                identifies the storage backends across 2 (or more) storage instances where the volume is replicated
                                It also contains any maintenance modes that the replication backend requires during vaious Ramen actions
                              properties:
                                id:
                                  description: |-
                                    ID contains the globally unique storage identifier that identifies
                                    the storage or replication backend
                                  type: string
                                modes:
                                  description: |-
                                    Modes is a list of maintenance modes that need to be activated on the storage
                                    backend, prior to various Ramen related orchestration. This is read from the label
                                    "ramendr.openshift.io/maintenancemodes" on the StorageClass or VolumeReplicationClass,
                                    the value for which is a comma separated list of maintenance modes.
                                  items:
                                    description: |-
                                      MMode defines a maintenance mode, that a storage backend may be requested to act on, based on the DR orchestration
                                      in progress for one or more workloads whose PVCs use the specific storage provisioner
                                    enum:
                                    - Failover
                                    type: string
                                  type: array
                              required:
                              - id
                              type: object
                            resources:
                              description: Resources set in the claim to be replicated
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                              type: object
                            storageClassName:
                              description: Name of the StorageClass required by the
                                claim.
                              type: string
                            storageID:
                              description: |-
                                StorageID contains the globally unique storage identifier, as reported by the storage backend
                                on the StorageClass as the value for the label "ramendr.openshift.io/storageid", that identifies
                                the storage backend that was used to provision the volume. It is used to label different StorageClasses
                                across different kubernetes clusters, that potentially share the same storage backend.
                                It also contains any maintenance modes that the storage backend requires during vaious Ramen actions
                              properties:
                                id:
                                  description: |-
                                    ID contains the globally unique storage identifier that identifies
                                    the storage or replication backend
                                  type: string
                                modes:
                                  description: |-
                                    Modes is a list of maintenance modes that need to be activated on the storage
                                    backend, prior to various Ramen related orchestration. This is read from the label
                                    "ramendr.openshift.io/maintenancemodes" on the StorageClass or VolumeReplicationClass,
                                    the value for which is a comma separated list of maintenance modes.
                                  items:
                                    description: |-
                                      MMode defines a maintenance mode, that a storage backend may be requested to act on, based on the DR orchestration
                                      in progress for one or more workloads whose PVCs use the specific storage provisioner
                                    enum:
                                    - Failover
                                    type: string
                                  type: array
                              required:
                              - id
                              type: object
                            volumeMode:
                              description: VolumeMode describes how a volume is intended
                                to be consumed, either Block or Filesystem.
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
            required:
            - drPolicyRef
            - placementRef
            - pvcSelector
            type: object
          status:
            description: DRPlacementControlStatus defines the observed state of DRPlacementControl
            properties:
              actionDuration:
                type: string
              actionStartTime:
                format: date-time
                type: string
              conditions:
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastGroupSyncBytes:
                description: |-
                  lastGroupSyncBytes is the total bytes transferred from the most recent
                  successful synchronization of all PVCs
                format: int64
                type: integer
              lastGroupSyncDuration:
                description: |-
                  lastGroupSyncDuration is the longest time taken to sync
                  from the most recent successful synchronization of all PVCs
                type: string
              lastGroupSyncTime:
                description: lastGroupSyncTime is the time of the most recent successful
                  synchronization of all PVCs
                format: date-time
                type: string
              lastKubeObjectProtectionTime:
                description: lastKubeObjectProtectionTime is the time of the most
                  recent successful kube object protection
                format: date-time
                type: string
              lastUpdateTime:
                description: LastUpdateTime is when was the last time a condition
                  or the overall status was updated
                format: date-time
                type: string
              observedGeneration:
                format: int64
                type: integer
              phase:
                description: DRState for keeping track of the DR placement
                type: string
              preferredDecision:
                description: PlacementDecision defines the decision made by controller
                properties:
                  clusterName:
                    type: string
                  clusterNamespace:
                    type: string
                type: object
              progression:
                type: string
              resourceConditions:
                description: |-
                  VRGConditions represents the conditions of the resources deployed on a
                  managed cluster.
                properties:
                  conditions:
                    description: Conditions represents the conditions of this resource
                      on a managed cluster.
                    items:
                      description: Condition contains details for one aspect of the
                        current state of this API Resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  resourceMeta:
                    description: ResourceMeta represents the VRG resource.
                    properties:
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state.
                        format: int64
                        type: integer
                      kind:
                        description: Kind is the kind of the Kubernetes resource.
                        type: string
                      name:
                        description: Name is the name of the Kubernetes resource.
                        type: string
                      namespace:
                        description: Namespace is the namespace of the Kubernetes
                          resource.
                        type: string
                      protectedpvcs:
                        description: List of PVCs that are protected by the VRG resource
                        items:
                          type: string
                        type: array
                      pvcgroups:
                        description: List of CGs that are protected by the VRG resource
                        items:
                          properties:
                            grouped:
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      resourceVersion:
                        description: |-
                          ResourceVersion is a value used to identify the version of the
                          VRG resource object
                        type: string
                    required:
                    - generation
                    - kind
                    - name
                    - namespace
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
