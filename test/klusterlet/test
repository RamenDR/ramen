#!/usr/bin/env -S python3 -u

# SPDX-FileCopyrightText: The RamenDR authors
# SPDX-License-Identifier: Apache-2.0

import sys
import time

import drenv


def apply_manifestwork(template, cluster, hub):
    drenv.log_progress(F"Applying example manifestwork to namespace {cluster}")
    yaml = template.substitute(namespace=cluster)
    drenv.kubectl("apply", "--filename", "-", input=yaml, profile=hub)


def delete_manifestwork(template, cluster, hub):
    drenv.log_progress(F"Deleting example manifestwork from namespace {cluster}")
    yaml = template.substitute(namespace=cluster)
    drenv.kubectl("delete", "--filename", "-", input=yaml, profile=hub)


def wait_until_available(cluster, hub):
    drenv.log_progress(
        f"Waiting until example mnifestwork is applied in namespace {cluster}"
    )
    drenv.kubectl(
        "wait", "manifestwork/example-manifestwork",
        "--for", "condition=applied",
        "--namespace", cluster,
        "--timeout", "60s",
        profile=hub,
    )

    drenv.log_progress(
        f"Waiting until example mnifestwork is available in namespace {cluster}"
    )
    drenv.kubectl(
        "wait", "manifestwork/example-manifestwork",
        "--for", "condition=available",
        "--namespace", cluster,
        "--timeout", "60s",
        profile=hub,
    )

    drenv.log_progress(
        f"Waiting until example deployment is available in cluster {cluster}"
    )
    drenv.kubectl(
        "wait", "deploy/example-deployment",
        "--for", "condition=available",
        "--timeout", "60s",
        profile=cluster,
    )


def wait_until_deleted(cluster, hub):
    drenv.log_progress(
        f"Waiting until example mnifestwork is deleted from namspace {cluster}"
    )
    drenv.kubectl(
        "wait", "manifestwork/example-manifestwork",
        "--for", "delete",
        "--namespace", cluster,
        "--timeout", "60s",
        profile=hub,
    )

    drenv.log_progress(
        f"Waiting until example deployment is deleted from cluster {cluster}"
    )
    drenv.kubectl(
        "wait", "deploy/example-deployment",
        "--for", "delete",
        "--timeout", "60s",
        profile=cluster,
    )


if len(sys.argv) != 4:
    print(f"Usage: {sys.argv[0]} cluster1 cluster2 hub")
    sys.exit(1)

cluster1 = sys.argv[1]
cluster2 = sys.argv[2]
hub = sys.argv[3]

template = drenv.template("klusterlet/example-manifestwork.yaml")

apply_manifestwork(template, cluster1, hub)
apply_manifestwork(template, cluster2, hub)

wait_until_available(cluster1, hub)
wait_until_available(cluster2, hub)

delete_manifestwork(template, cluster1, hub)
delete_manifestwork(template, cluster2, hub)

wait_until_deleted(cluster1, hub)
wait_until_deleted(cluster2, hub)
