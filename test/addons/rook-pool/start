#!/usr/bin/env python3

# SPDX-FileCopyrightText: The RamenDR authors
# SPDX-License-Identifier: Apache-2.0

import os
import sys

import drenv
from drenv import kubectl


def deploy(cluster):
    print("Creating rbd pool and storage class")
    kubectl.apply(
        "--filename=replica-pool.yaml",
        "--filename=storage-class.yaml",
        context=cluster,
    )


def wait(cluster):
    print("Waiting until ceph block pool is ready")
    drenv.wait_for(
        "cephblockpool/replicapool",
        output="jsonpath={.status.phase}",
        namespace="rook-ceph",
        timeout=120,
        profile=cluster,
    )
    kubectl.wait(
        "cephblockpool/replicapool",
        "--for=jsonpath={.status.phase}=Ready",
        "--namespace=rook-ceph",
        "--timeout=300s",
        context=cluster,
    )

    print("Waiting for replica pool peer token")
    kubectl.wait(
        "cephblockpool/replicapool",
        "--for=jsonpath={.status.info.rbdMirrorBootstrapPeerSecretName}=pool-peer-token-replicapool",
        "--namespace=rook-ceph",
        "--timeout=300s",
        context=cluster,
    )


if len(sys.argv) != 2:
    print(f"Usage: {sys.argv[0]} cluster")
    sys.exit(1)

os.chdir(os.path.dirname(__file__))
cluster = sys.argv[1]

deploy(cluster)
wait(cluster)
